const mongoose = require("mongoose");

const refundPosSalesSchema = new mongoose.Schema(
  {
    employee: String,
    financailFund: [
      {
        currency: String,
        currencyID: String,
        exchangeRate: String,
        fundName: String,
        fundId: String,
        allocatedAmount: Number,
        accountId: String,
        _id: false,
      },
    ],

    cartItems: [
      {
        type: { type: String, default: "product" },
        id: String,
        qr: String,
        name: String,
        category: String,
        orginalBuyingPrice: Number,
        profitRatio: Number,
        convertedBuyingPrice: Number,
        sellingPrice: Number,
        unit: String,
        tax: {
          _id: String,
          tax: Number,
          salesAccountTax: String,
          name: String,
        },
        taxValue: Number,
        soldQuantity: Number,
        totalWithoutTax: Number,
        total: Number,
        note: String,
        exchangeRate: Number,
        discountType: String,
        discountPercentege: Number,
        discountAmount: Number,
        discount: Number,
        showNote: Boolean,
        showDiscount: Boolean,
        buyingpriceMainCurrence: Number,
        _id: false,
      },
    ],

    customer: {
      id: String,
      name: String,
      phone: String,
      email: String,
      address: String,
      company: String,
      taxAdministration: String,
      taxNumber: String,
      country: String,
      city: String,
      _id: false,
    },
    taxSummary: [
      {
        taxId: String,
        taxRate: Number,
        totalTaxValue: Number,
        discountTaxValue: Number,
        salesAccountTax: String,
        _id: false,
      },
    ],
    currency: {
      id: String,
      currencyCode: String,
      currencyName: String,
      exchangeRate: String,
      _id: false,
    },
    paymentsStatus: { type: String, default: "paid" },
    exchangeRate: Number,
    invoiceName: String,
    totalInMainCurrency: Number,
    manuallInvoiceDiscount: Number,
    manuallInvoiceDiscountValue: Number,
    invoiceDiscount: Number,
    ManualInvoiceDiscountValue: Number,
    paymentInFundCurrency: Number,
    invoiceGrandTotal: Number,
    InvoiceDiscountType: String,
    invoiceSubTotal: Number,
    invoiceTax: Number,
    date: String,
    description: String,
    type: { type: String, default: "Refund Pos" },
    salesPoint: { type: mongoose.Schema.ObjectId, ref: "salesPoints" },
    counter: {
      type: String,
      default: 0,
    },
    receipt: String,
    stock: { type: mongoose.Schema.ObjectId, ref: "Stock" },
    sync: { type: Boolean, default: false },
    companyId: {
      type: String,
      required: true,
      index: true,
    },
  },

  { timestamps: true }
);

module.exports = mongoose.model("RefundPosSales", refundPosSalesSchema);
